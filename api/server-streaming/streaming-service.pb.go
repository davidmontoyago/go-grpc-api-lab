// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server-streaming/streaming-service.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_CREATE EventType = 0
	EventType_UPDATE EventType = 10
	EventType_DELETE EventType = 20
)

var EventType_name = map[int32]string{
	0:  "CREATE",
	10: "UPDATE",
	20: "DELETE",
}

var EventType_value = map[string]int32{
	"CREATE": 0,
	"UPDATE": 10,
	"DELETE": 20,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0dfbbed0df1afed4, []int{0}
}

type EventRequest struct {
	Type                 EventType `protobuf:"varint,1,opt,name=type,proto3,enum=api.EventType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dfbbed0df1afed4, []int{0}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_CREATE
}

type Event struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 EventType `protobuf:"varint,10,opt,name=type,proto3,enum=api.EventType" json:"type,omitempty"`
	Description          string    `protobuf:"bytes,20,opt,name=description,proto3" json:"description,omitempty"`
	SourceApplication    string    `protobuf:"bytes,30,opt,name=sourceApplication,proto3" json:"sourceApplication,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_0dfbbed0df1afed4, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_CREATE
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetSourceApplication() string {
	if m != nil {
		return m.SourceApplication
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.EventType", EventType_name, EventType_value)
	proto.RegisterType((*EventRequest)(nil), "api.EventRequest")
	proto.RegisterType((*Event)(nil), "api.Event")
}

func init() {
	proto.RegisterFile("server-streaming/streaming-service.proto", fileDescriptor_0dfbbed0df1afed4)
}

var fileDescriptor_0dfbbed0df1afed4 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xdf, 0x4a, 0xc3, 0x50,
	0x0c, 0xc6, 0xed, 0xd4, 0xc1, 0xa2, 0x94, 0x2d, 0x4c, 0x18, 0x5e, 0xc8, 0xe8, 0xd5, 0x10, 0xd7,
	0x69, 0x7d, 0x82, 0xe1, 0x0e, 0x82, 0x78, 0x21, 0x5d, 0x7d, 0x80, 0xda, 0x06, 0x09, 0x68, 0x1b,
	0xcf, 0x39, 0x1b, 0xec, 0x19, 0x7c, 0x69, 0x69, 0xd4, 0xae, 0x20, 0xde, 0x7d, 0x7c, 0x7f, 0x08,
	0xf9, 0xc1, 0xcc, 0x91, 0xdd, 0x92, 0x9d, 0x3b, 0x6f, 0x29, 0x7f, 0xe7, 0xea, 0x75, 0xd1, 0xaa,
	0x79, 0x13, 0x71, 0x41, 0xb1, 0xd8, 0xda, 0xd7, 0x78, 0x98, 0x0b, 0x47, 0x09, 0x9c, 0x9a, 0x2d,
	0x55, 0x3e, 0xa5, 0x8f, 0x0d, 0x39, 0x8f, 0x11, 0x1c, 0xf9, 0x9d, 0xd0, 0x24, 0x98, 0x06, 0xb3,
	0x30, 0x09, 0xe3, 0x5c, 0x38, 0xd6, 0x42, 0xb6, 0x13, 0x4a, 0x35, 0x8b, 0x3e, 0x03, 0x38, 0x56,
	0x0f, 0x43, 0xe8, 0x71, 0xa9, 0xdd, 0x41, 0xda, 0xe3, 0xb2, 0x5d, 0xc3, 0xff, 0x6b, 0x9c, 0xc2,
	0x49, 0x49, 0xae, 0xb0, 0x2c, 0x9e, 0xeb, 0x6a, 0x32, 0xd6, 0x71, 0xd7, 0xc2, 0x2b, 0x18, 0xb9,
	0x7a, 0x63, 0x0b, 0x5a, 0x8a, 0xbc, 0x71, 0x91, 0x6b, 0xef, 0x42, 0x7b, 0x7f, 0x83, 0xcb, 0x05,
	0x0c, 0xda, 0x13, 0x08, 0xd0, 0xbf, 0x4b, 0xcd, 0x32, 0x33, 0xc3, 0x83, 0x46, 0x3f, 0x3f, 0xad,
	0x1a, 0x0d, 0x8d, 0x5e, 0x99, 0x47, 0x93, 0x99, 0xe1, 0x38, 0x79, 0x80, 0x33, 0x1d, 0xac, 0x7f,
	0xb9, 0xac, 0xbf, 0xb1, 0xe0, 0x0d, 0x84, 0xf7, 0xe4, 0x3b, 0x19, 0x8e, 0xf6, 0x1f, 0xfc, 0x00,
	0x3a, 0x87, 0xbd, 0x75, 0x1d, 0xbc, 0xf4, 0x15, 0xe5, 0xed, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xb5, 0x6a, 0x7a, 0xf2, 0x76, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventStreamingServiceClient is the client API for EventStreamingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventStreamingServiceClient interface {
	GetEventStream(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (EventStreamingService_GetEventStreamClient, error)
}

type eventStreamingServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventStreamingServiceClient(cc *grpc.ClientConn) EventStreamingServiceClient {
	return &eventStreamingServiceClient{cc}
}

func (c *eventStreamingServiceClient) GetEventStream(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (EventStreamingService_GetEventStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventStreamingService_serviceDesc.Streams[0], "/api.EventStreamingService/GetEventStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStreamingServiceGetEventStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventStreamingService_GetEventStreamClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type eventStreamingServiceGetEventStreamClient struct {
	grpc.ClientStream
}

func (x *eventStreamingServiceGetEventStreamClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventStreamingServiceServer is the server API for EventStreamingService service.
type EventStreamingServiceServer interface {
	GetEventStream(*EventRequest, EventStreamingService_GetEventStreamServer) error
}

// UnimplementedEventStreamingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventStreamingServiceServer struct {
}

func (*UnimplementedEventStreamingServiceServer) GetEventStream(req *EventRequest, srv EventStreamingService_GetEventStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetEventStream not implemented")
}

func RegisterEventStreamingServiceServer(s *grpc.Server, srv EventStreamingServiceServer) {
	s.RegisterService(&_EventStreamingService_serviceDesc, srv)
}

func _EventStreamingService_GetEventStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventStreamingServiceServer).GetEventStream(m, &eventStreamingServiceGetEventStreamServer{stream})
}

type EventStreamingService_GetEventStreamServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type eventStreamingServiceGetEventStreamServer struct {
	grpc.ServerStream
}

func (x *eventStreamingServiceGetEventStreamServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _EventStreamingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.EventStreamingService",
	HandlerType: (*EventStreamingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEventStream",
			Handler:       _EventStreamingService_GetEventStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server-streaming/streaming-service.proto",
}
